(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{121:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),b=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=b(n),u=r,m=s["".concat(p,".").concat(u)]||s[u]||d[u]||i;return n?a.a.createElement(m,l(l({ref:t},c),{},{components:n})):a.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,p[1]=l;for(var c=2;c<i;c++)p[c]=n[c];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return c}));var r=n(3),a=(n(0),n(121));const i={id:"ghostly_engine.view",title:"Interface: View<Params>",sidebar_label:"View",custom_edit_url:null,hide_title:!0},p={unversionedId:"api/interfaces/ghostly_engine.view",id:"api/interfaces/ghostly_engine.view",isDocsHomePage:!1,title:"Interface: View<Params>",description:"Interface: View",source:"@site/docs/api/interfaces/ghostly_engine.view.md",slug:"/api/interfaces/ghostly_engine.view",permalink:"/ghostly/docs/api/interfaces/ghostly_engine.view",editUrl:null,version:"current",sidebar_label:"View",sidebar:"someSidebar",previous:{title:"Interface: TemplateEngine",permalink:"/ghostly/docs/api/interfaces/ghostly_engine.templateengine"},next:{title:"Interface: WSErrorResponse",permalink:"/ghostly/docs/api/interfaces/ghostly_engine.wserrorresponse"}},l=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Properties",id:"properties",children:[{value:"contentType",id:"contenttype",children:[]},{value:"dpi",id:"dpi",children:[]},{value:"htmlTransforms",id:"htmltransforms",children:[]},{value:"paperSize",id:"papersize",children:[]},{value:"params",id:"params",children:[]},{value:"viewportSize",id:"viewportsize",children:[]}]}],o={toc:l};function c({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"interface-viewparams"},"Interface: View<Params",">"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"/ghostly/docs/api/modules/ghostly_engine"},"ghostly-engine"),".View"),Object(a.b)("p",null,"A view of the model that the template should render."),Object(a.b)("h2",{id:"type-parameters"},"Type parameters"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:"left"},"Name"),Object(a.b)("th",{parentName:"tr",align:"left"},"Default"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:"left"},Object(a.b)("inlineCode",{parentName:"td"},"Params")),Object(a.b)("td",{parentName:"tr",align:"left"},Object(a.b)("em",{parentName:"td"},"unknown"))))),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)("h3",{id:"contenttype"},"contentType"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"contentType"),": ",Object(a.b)("em",{parentName:"p"},"string")),Object(a.b)("p",null,"The view's type (for instance, ",Object(a.b)("inlineCode",{parentName:"p"},"text/html")," or ",Object(a.b)("inlineCode",{parentName:"p"},"application/pdf"),")."),Object(a.b)("p",null,"Defined in: ghostly-runtime/build/src/types.d.ts:62"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"dpi"},"dpi"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(a.b)("strong",{parentName:"p"},"dpi"),": ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"The resolution be used when rendering the view. Used for viewport size calculations."),Object(a.b)("p",null,"Defined in: ghostly-runtime/build/src/types.d.ts:66"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"htmltransforms"},"htmlTransforms"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(a.b)("strong",{parentName:"p"},"htmlTransforms"),": ",Object(a.b)("a",{parentName:"p",href:"/ghostly/docs/api/modules/ghostly_engine#htmltransform"},Object(a.b)("em",{parentName:"a"},"HTMLTransform")),"[]"),Object(a.b)("p",null,"An array of transformations to apply when producing HTML results. Defaults to ",Object(a.b)("inlineCode",{parentName:"p"},"[ sanitize, minimize ]"),"."),Object(a.b)("p",null,"Defined in: ghostly-runtime/build/src/types.d.ts:72"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"papersize"},"paperSize"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(a.b)("strong",{parentName:"p"},"paperSize"),": ",Object(a.b)("a",{parentName:"p",href:"/ghostly/docs/api/modules/ghostly_engine#papersize"},Object(a.b)("em",{parentName:"a"},"PaperSize"))),Object(a.b)("p",null,"The paper size to be used when rendering documents."),Object(a.b)("p",null,"Defined in: ghostly-runtime/build/src/types.d.ts:68"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"params"},"params"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(a.b)("strong",{parentName:"p"},"params"),": Params"),Object(a.b)("p",null,"Optional view params."),Object(a.b)("p",null,"Defined in: ghostly-runtime/build/src/types.d.ts:64"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"viewportsize"},"viewportSize"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("inlineCode",{parentName:"p"},"Optional")," ",Object(a.b)("strong",{parentName:"p"},"viewportSize"),": ",Object(a.b)("a",{parentName:"p",href:"/ghostly/docs/api/modules/ghostly_engine#viewportsize"},Object(a.b)("em",{parentName:"a"},"ViewportSize"))),Object(a.b)("p",null,"The size of the viewport to use, in pixels. Will be calculated from ",Object(a.b)("inlineCode",{parentName:"p"},"dpi")," and ",Object(a.b)("inlineCode",{parentName:"p"},"paperSize"),", if not provided."),Object(a.b)("p",null,"Defined in: ghostly-runtime/build/src/types.d.ts:70"))}c.isMDXComponent=!0}}]);