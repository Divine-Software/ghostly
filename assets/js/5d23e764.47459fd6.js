"use strict";(self.webpackChunk_divine_ghostly_website=self.webpackChunk_divine_ghostly_website||[]).push([[7344],{9613:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),o=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),g=o(n),u=a,h=g["".concat(p,".").concat(u)]||g[u]||m[u]||i;return n?r.createElement(h,l(l({ref:t},d),{},{components:n})):r.createElement(h,l({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3655:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return d},default:function(){return g}});var r=n(2245),a=n(5903),i=(n(9496),n(9613)),l=["components"],s={id:"ghostly_engine.Engine",title:"Class: Engine",sidebar_label:"Engine",custom_edit_url:null},p=void 0,o={unversionedId:"api/classes/ghostly_engine.Engine",id:"api/classes/ghostly_engine.Engine",isDocsHomePage:!1,title:"Class: Engine",description:"ghostly-engine.Engine",source:"@site/docs/api/classes/ghostly_engine.Engine.md",sourceDirName:"api/classes",slug:"/api/classes/ghostly_engine.Engine",permalink:"/ghostly/docs/api/classes/ghostly_engine.Engine",editUrl:null,tags:[],version:"current",frontMatter:{id:"ghostly_engine.Engine",title:"Class: Engine",sidebar_label:"Engine",custom_edit_url:null},sidebar:"someSidebar",previous:{title:"ghostly",permalink:"/ghostly/docs/api/namespaces/ghostly_runtime.ghostly"},next:{title:"GhostlyError",permalink:"/ghostly/docs/api/classes/ghostly_engine.GhostlyError"}},d=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"httpRequestHandler",id:"httprequesthandler",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"start",id:"start",children:[{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"stop",id:"stop",children:[{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"template",id:"template",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3}],level:2}],m={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../modules/ghostly_engine"},"ghostly-engine"),".Engine"),(0,i.kt)("p",null,"The Ghostly Engine API."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Engine"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"config?"),")"),(0,i.kt)("p",null,"Constructs a Ghostly Engine instance."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"config")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("a",{parentName:"td",href:"../interfaces/ghostly_engine.EngineConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"EngineConfig")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Optional Ghostly Engine configuration.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/ghostly/blob/5d70124/ghostly-engine/src/engine.ts#L187"},"ghostly-engine/src/engine.ts:187")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"httprequesthandler"},"httpRequestHandler"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"httpRequestHandler"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"request"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"response?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"pathName?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.WSResponse"},(0,i.kt)("inlineCode",{parentName:"a"},"WSResponse")),">"),(0,i.kt)("p",null,"Handle an incoming HTTP request and serialize the result accordingly."),(0,i.kt)("p",null,"This method can either be used directly as a Node.js HTTP ",(0,i.kt)("inlineCode",{parentName:"p"},"RequestListener"),", or as a utility method. If\n",(0,i.kt)("inlineCode",{parentName:"p"},"response")," is specified, the result will be serialized as ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer"),"/",(0,i.kt)("a",{parentName:"p",href:"../modules/ghostly_engine#wsrenderresponse"},"WSRenderResponse"),"/",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.WSErrorResponse"},"WSErrorResponse"),",\ndepending on the request and its outcome. In either case, the raw ",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.WSResponse"},"WSResponse")," will be returned as well."),(0,i.kt)("p",null,"The Web Service/HTTP interface supports three different processing modes:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"GET")," requests. The following query parameters should be specified:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"template"),":    URL of template to render."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"view"),":        Media type of view to render."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"params"),":      Optional view params as (URL-encoded) JSON."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"document"),":    The model to render, as a string."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"contentType"),": The model's media type.")),(0,i.kt)("p",{parentName:"li"},"The response will be the rendered view.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"POST")," requests that includes a ",(0,i.kt)("inlineCode",{parentName:"p"},"template")," query parameter:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"template"),":    URL of template to render."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"view"),":        Media type of view to render."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"params"),":      Optional view params as (URL-encoded) JSON.")),(0,i.kt)("p",{parentName:"li"},"The request body should be the model. The response will be the rendered view.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"POST")," request with no query parameters."),(0,i.kt)("p",{parentName:"li"},"The request body should be a JSON-encoded ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.WSRenderRequest"},"WSRenderRequest")," message, and the response(s) will be returned\nas ",(0,i.kt)("a",{parentName:"p",href:"../modules/ghostly_engine#wsrenderresponse"},"WSRenderResponse"),", i.e. a ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.WSRenderResult"},"WSRenderResult")," array, which can also include attachments and events\nemitted from the template."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.WSRenderRequest"},"WSRenderRequest")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"../modules/ghostly_engine#wsrenderresponse"},"WSRenderResponse")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.WSRenderResult"},"WSRenderResult")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"see"))," ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.WSErrorResponse"},"WSErrorResponse")),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"request")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"IncomingMessage")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Node.js HTTP request to handle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"response?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ServerResponse")),(0,i.kt)("td",{parentName:"tr",align:"left"},"If specified, the response will be serialized and written to this ",(0,i.kt)("inlineCode",{parentName:"td"},"ServerResponse")," object.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"pathName?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The URL path to match. Defaults to '/'.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.WSResponse"},(0,i.kt)("inlineCode",{parentName:"a"},"WSResponse")),">"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.WSResponse"},"WSResponse")," representation of the result."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/ghostly/blob/5d70124/ghostly-engine/src/engine.ts#L303"},"ghostly-engine/src/engine.ts:303")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"start"},"start"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"start"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.Engine"},(0,i.kt)("inlineCode",{parentName:"a"},"Engine")),">"),(0,i.kt)("p",null,"Launch the configured number of browser instances and get ready for work."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.Engine"},(0,i.kt)("inlineCode",{parentName:"a"},"Engine")),">"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/ghostly/blob/5d70124/ghostly-engine/src/engine.ts#L215"},"ghostly-engine/src/engine.ts:215")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"stop"},"stop"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"stop"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.Engine"},(0,i.kt)("inlineCode",{parentName:"a"},"Engine")),">"),(0,i.kt)("p",null,"Close all running browser instances and clean up internal resources."),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("a",{parentName:"p",href:"ghostly_engine.Engine"},(0,i.kt)("inlineCode",{parentName:"a"},"Engine")),">"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/ghostly/blob/5d70124/ghostly-engine/src/engine.ts#L228"},"ghostly-engine/src/engine.ts:228")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"template"},"template"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"template"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"uri"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"templateConfig?"),"): ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.TemplateEngine"},(0,i.kt)("inlineCode",{parentName:"a"},"TemplateEngine"))),(0,i.kt)("p",null,"Create a ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.TemplateEngine"},"TemplateEngine")," instance using the specified Ghostly template URL."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The URL of the Ghostly template to use.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"templateConfig")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Partial"),"<",(0,i.kt)("a",{parentName:"td",href:"../interfaces/ghostly_engine.TemplateConfig"},(0,i.kt)("inlineCode",{parentName:"a"},"TemplateConfig")),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../interfaces/ghostly_engine.TemplateEngine"},(0,i.kt)("inlineCode",{parentName:"a"},"TemplateEngine"))),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Divine-Software/ghostly/blob/5d70124/ghostly-engine/src/engine.ts#L250"},"ghostly-engine/src/engine.ts:250")))}g.isMDXComponent=!0}}]);